    
//enable/grid/comms if len(to_set(COMMS_SELECTED_ID) & any_role("room,system,access"))

//comms if len(to_set(COMMS_SELECTED_ID) & any_role("room,system,access"))
all_dcs = to_object_list(grid_objects(COMMS_ORIGIN_ID) & role("damcons"))
dcs = []
workers = []
for dc in all_dcs:
    if has_link_to(dc.id, "work-order", COMMS_SELECTED_ID):
        workers.append(dc)
    else:
        dcs.append(dc)

+ "set rally point" //comms/room/rally

if has_role(COMMS_SELECTED_ID, "__damaged__"):
    #  Need to figure out colors 
    #  color=f"{get_inventory_value(d.id, 'color')}", data=
    #
    for d in dcs:
        + "assign {d.name}" {"d": d}:
            link(d.id, "work-order", COMMS_SELECTED_ID)
    for d in workers:
        + "cancel {d.name}" {"d": d}:
            unlink(d.id, "work-order", COMMS_SELECTED_ID)


//comms/room/rally
+ "Back" //comms

# Need to figure out color color=f"{get_inventory_value(d.id, 'color')}", data=
dcs = to_object_list(grid_objects(COMMS_ORIGIN_ID) & role("damcons"))
for d in dcs:
    + "set {d.name} rally point" comms_room_rally_dc {"d": d}


===== comms_room_rally_dc =======

# Add this to the 
_blob = to_blob(COMMS_SELECTED_ID)
_loc_x = _blob.get("curx", 0)
_loc_y = _blob.get("cury", 0)
set_inventory_value(d.id, "idle_pos", (_loc_x, _loc_y) )
idle_marker = get_inventory_value(d.id, "idle_marker", None)
#
#
clear_timer(d.id, "boost_timer")

if idle_marker is not None:
    _blob = to_blob(idle_marker)
    _blob.set("curx",_loc_x, 0)
    _blob.set("cury",_loc_y, 0)

#is_idle = get_inventory_value(d.id, "idle")
#if is_idle:
set_inventory_value(d.id, "idle_state", "start" )

comms_navigate("//comms")
