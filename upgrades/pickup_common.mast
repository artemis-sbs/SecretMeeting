# Collision handler for anomalies/upgrades. 
# Adds upgrade to ship inventory, deletes object, creates particle splash.
# For HiDens Power Cell, no inventory, just adds 500-600 energy to ship.

//collision/object
if has_roles(COLLISION_ORIGIN_ID, "upgrade, carapaction_coil"):
    print("Pickup: Carapaction Coil")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Carapaction Coil", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "carapaction_coil", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "carapaction_coil", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, infusion_pcoils"):
    print("Pickup: Infusion P-Coils")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Infusion P-Coils", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "infusion_pcoils", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "infusion_pcoils", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, tauron_focuser"):
    print("Pickup: Tauron Focuser")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Tauron Focuser", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "tauron_focuser", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "tauron_focuser", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, secret_codecase"):
    print("Pickup: Secret Code Case")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Secret Codecase", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "secret_codecase", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "secret_codecase", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, hidens_powercell"):
    print("Pickup: HiDens Power Cell")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: HiDens Power Cell", "#FF0")
    if has_roles(COLLISION_SELECTED_ID, "__player__"):
        blob = to_blob(COLLISION_SELECTED_ID)
        if blob is not None:
            energy = blob.get("energy", 0)
            energy += 500
            blob.set("energy", energy, 0)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, vigoranium_nodule"):
    print("Pickup: Vigoranium Nodule")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Vigoranium Nodule", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "vigoranium_nodule", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "vigoranium_nodule", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, cetrocite_crystal"):
    print("Pickup: Cetrocite Crystal")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Cetrocite Crystal", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "cetrocite_crystal", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "cetrocite_crystal", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, lateral_array"):
    print("Pickup: Lateral Array")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Lateral Array", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "lateral_array", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "lateral_array", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")
elif has_roles(COLLISION_ORIGIN_ID, "upgrade, haplix_overcharger"):
    print("Pickup: Haplix Overcharger")
    comms_broadcast(COLLISION_SELECTED_ID, "Pickup: Haplix Overcharger", "#FF0")
    addinv = get_inventory_value(COLLISION_SELECTED_ID, "haplix_overcharger", 0)
    addinv += 1
    set_inventory_value(COLLISION_SELECTED_ID, "haplix_overcharger", addinv)
    tobj = sim.get_space_object(COLLISION_ORIGIN_ID)
    tpos = tobj.pos
    sbs.delete_object(COLLISION_ORIGIN_ID)
    sbs.particle_at(tpos, "color:#01F,#505; lifespan:30; image_cell:9; size:20;speed: 1; count:100,1000")

->END
